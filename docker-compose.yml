version: '3.8'

networks:
  app_network:

volumes:
  grafana-data:
    driver: local
  prometheus-data:
    driver: local
  staff-users-data:
    driver: local


services:
  postgres:
    image: postgres:13.2
    restart: always
    volumes:
      - staff-users-data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    networks:
      - app_network


# services:
#   surrealdb:
#     image: surrealdb/surrealdb:latest
#     container_name: surrealdb
#     restart: always
#     networks:
#       - app-network
#     command: start --auth --user ${DB_ACC} --pass ${DB_PASS} file:/data/database.db
#     ports:
#     - 8000:8000
#     volumes:
#     - ./data:/data
   

  # prometheus:
  #   image: prom/prometheus
  #   container_name: prometheus
  #   volumes:
  #     - ./prometheus-config:/etc/prometheus
  #     - ./data/prometheus:/prometheus
  #   command:
  #     - --config.file=/etc/prometheus/prometheus.yml
  #   ports:
  #     - "9090:9090"
  #   networks:
  #     - app-network

  # grafana:
  #   image: grafana/grafana
  #   container_name: grafana
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     - GF_SECURITY_ADMIN_USER=admin
  #     - GF_SECURITY_ADMIN_PASSWORD=admin
  #   networks:
  #     - app-network







  # rust-apigw:
  #   build:
  #     context: ./apigw
  #     dockerfile: Dockerfile
  #   container_name: rustapigw-dc
  #   networks:
  #     - app-network
  #   ports:
  #     - 10000:10000
  #   volumes:
  #     - './apigw:/usr/src/apigw'
  #   environment:
  #     - JWT_SECRET=${JWT_SECRET}


  # rust-userservice:
  #   build:
  #     context: ./userservice
  #     dockerfile: Dockerfile
  #   container_name: rustuserservice-dc
  #   networks:
  #     - app-network
  #   ports:
  #     - 11000:11000
  #   volumes:
  #     - './userservice:/usr/src/userservice'
  #   environment:
  #     - JWT_SECRET=${JWT_SECRET}
  #     - DB_ACC=${DB_ACC}
  #     - DB_PASS=${DB_PASS}
  #     - DB_IP=${DB_IP}
  #     - DB_NS=${DB_NS}
  #     - DB_NAME=Â£{DB_NAME}
  #   depends_on:
  #     - surrealdb



  # grafana:
  #   image: grafana/grafana-oss:latest
  #   container_name: grafana
  #   ports:
  #     - "3001:3001"
  #   volumes:
  #     - grafana-data:/var/lib/grafana
  #   restart: unless-stopped

